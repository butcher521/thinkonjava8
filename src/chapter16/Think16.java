package chapter16;

/**
 * @Author MPC
 * @Description:
 * @Date Created in 11:22 2020/6/2
 *
 * 第16章 数组；
 * 数组和容器的不同：效率，类型，保存能力；
 * 数组的存储和随机方法对象引用的速率是最快的；
 * 这就是一个简单的线性序列；所以访问快，代价就是数组的大小固定不可变！
 * ArrayList和数组的区别： 访问器元素是一个用索引[]  ，一个用get（）；
 * 有了泛型，数组的唯一优势就是效率，但是可能会有部分限制；
 * 数组中保存对象的引用和基本类型的值；
 * 数组的初始化有两种，静态的和动态的；直接表明元素，或者只是数组的大小；
 * 多维数组的创建，只需要逗号和大括号的分隔即可；
 * 多维数组的打印是Arrays中的DeepToString（）；
 * 不同维度的数组的参数，就是依次的将大数组划分；
 *
 * 泛型和数据不搭配，编译通不过！  A1<A2>[]  这是错误的；
 * 只能是用参数化数组本省   T[], 这也是胡自动的识别参数！
 *
 * 数组中常用的工具类就是Arrays，其中有很多方法；
 * fill（obj【】，obj）为一个特定的数组全部填充一个对象或者值；
 *可以使用生成器开创建更加有意义的数组；
 * System中有一个arraycoppy复制数组的方法，效率很快！
 * 数组的相等的调价： 元素个数相等必宁企鹅，诶一个元素都相等；使用Arrays重写的equals方法比较；
 * 数组元素的比较；  数组实现了comparable 接口，重写copareTo方法，晶形比较！实现排序！
 *
 *
 */
public class Think16 {
}
