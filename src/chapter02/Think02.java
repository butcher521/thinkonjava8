package chapter02;
/**
 * 第二章  一切都是对象
 * 1 用引用操作对象
 * String s=new String();   标识符s实际上是对象new String() 的一个引用；
 * 注意，一个抽象类或者接口不能建立实例；但是可以创建一个该类或者接口的引用对象；
 * 因为此时标识符并没有指向任何的对象，没有违规操作；
 *2 对象的创建
 * 一个对象的创建必须存放在某个位置；下面是储存位置的介绍；
 * 寄存器位于cpu，处理器直接从寄存器中调用数据或者指令；速度最快
 * 堆栈，就是栈内存；一般是在RAM中指定一段内存空间，作为栈空间；由ss sp地址和指针控制；
 * 随着方法的调用和释放，生命周期清楚；方法内部的局部变量等；
 * 堆内存也是ram的空间，存放对象；内有垃圾回收机制；
 * 数据库等非Ram储存，通过io流的读取和写入操作；
 *
 * 基本类型按值传递，对象按照引用传递，所以基本类型的值存放在栈中；
 * 基本类型的数据大小固定使得java的可移植性增强；
 * char 2  byte 1 short 2 int 4 long 8 float 4 double 8
 * 其中boolean 不确定，可能为一个bit；
 * 基本类型的包装类使得对应一个在堆内存的包装类；二者可以自动的转换，成为装箱，拆箱；
 *  但是注意；int 和double默认的类型是由位数限制的；所以用BigInteger和BigDecimal来处理高精度数据；
 *  都是以速度换精度； 注意java基本类型最好用double；
 *  一般的方法api即可，注意加法是add，乘法是multiply 除法是divide  取模运算是mod；
 *
 *  一个类包括了字段和方法，也就是成员变量和成员方法；
 *  字段最好设置为类的私有；通过类的构造器或者其他方法设置字段；
 *  系统会自动的给字段初始化；0 null false；
 *  强调，类的私有变量的封装，只有在本类中由对象才可以封装；如果本类的对象在其他的类中，就不能访问私有变量；
 *
 *  方法有参数列表，方法名和返回值组成，其中参数和方法名成为方法的签名，可以区分方法的重载；
 *  return 的作用一个是返回返回值；一个是结束该方法；
 *
 *  导包用import 语句，防止类名的重复，如果是导入静态包，导入的类中的静态方法可以直接调用，不需要类名；
 *
 *   static关键字，修饰的一切只是与类有关，与对象再也没有关系；
 *   修饰方法，就不要创建对象类调用；修饰字段，就为此分配单一的空间，不考虑对象；
 *   静态成员变量，当一个类运行时，就被唯一的创建了一次；多个对象共享一个静态数据；
 *   静态的方法就不能访问非静态的域和方法；因为非静态需要对象调用，当没有对象的时候，访问就会失败；
 *
 *   main方法的参数列表是字符串数组，args；这里明没有用到参数，但是需要存储命令行参数；
 *
 *   java源文件由javac编译器编译后形成class字节码文件；字节码文件通过jvm虚拟机的解释器，解释称机器语言；
 *   java的注释有两种；很常见；
 *   javadoc提取注释，将注释生成一个html文件，这样会更好的维护代码与注释；
 *   所有的注释必须在/**之后，在“* /”之前；
 *   文档注释一共有三种类型，类，域，方法；均在前面定义；
 *   注意：只有访问权限是public和protected的成员才可见文档注释；
 *   常见的标签
 * @+see 可以引用其他类的文档   version  Author since param return Deprecated
 *
 * 标识符的书写规范；类名为大驼峰；方法名和变量名为小驼峰式；注意常量为大写下划线的形式；
 *
 *
 *
 * */
public class Think02 {
}
